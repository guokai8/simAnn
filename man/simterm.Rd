% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.R
\name{simterm}
\alias{simterm}
\title{Calculate semantic similarity between terms}
\usage{
simterm(
  tree,
  terms,
  method = c("term", "ic", "resnik", "lin", "faith", "rel", "simic", "gogo", "wang",
    "anc"),
  ic_method = NULL,
  submethod = c("kappa", "overlap", "jaccard", "dice"),
  normType = "max",
  annotUniverse = NULL,
  weights = NULL,
  useIgraph = TRUE,
  useCache = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{tree}{An OntologyTree object}

\item{terms}{A character vector of term IDs/names, or numeric indices}

\item{method}{Similarity method to use:

* "term": Term overlap based methods

* "ic": Universal information content

* "resnik": Resnik's information content 
Link: 
\doi{10.1613/jair.514}, \doi{10.1186/1471-2105-9-S5-S4}, \doi{10.1186/1471-2105-11-562}, \doi{10.1155/2013/292063}.

* "lin": Lin similarity
Link: \doi{10.5555/645527.657297}.

* "faith": FaITH similarity
Link: \doi{10.1007/978-3-642-17746-0_39}.

* "rel": Relevance similarity
Link: \doi{10.1186/1471-2105-7-302}.

* "simic": SimIC similarity
Link: \doi{10.48550/arXiv.1001.0958}.

* "gogo": GOGO similarity
Link: \doi{10.1038/s41598-018-33219-y}.

* "wang": Wang's method
Link: \doi{10.1093/bioinformatics/btm087}.

* "anc": Ancestor based similarity}

\item{ic_method}{For "faith","rel",and "simic" methods:
* "universal": Calculate universal-based Information Content
* "annotation": Calculate annotation-based Information Content
* "wang": Wang's Information Content
* "offspring": Calculate offspring-based Information Content}

\item{submethod}{For "term" method only:
* "kappa": Cohen's kappa

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is [the kappa coeffcient](https://en.wikipedia.org/wiki/Cohen%27s_kappa)
of the two sets. 

* "overlap": Overlap coefficient

Denote two sets `A` and `B` as the items annotated to terms `a` and `b`. The similarity value is the overlap coefficient
of the two sets, defined as `length(intersect(A, B))/min(length(A), length(B))`.

* "jaccard": Jaccard similarity

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is the Jaccard coeffcient
of the two sets, defined as `length(intersect(A, B))/length(union(A, B))`.   

* "dice": Dice coefficient

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is the Dice coeffcient
of the two sets, defined as `2*length(intersect(A, B))/(length(A) + length(B))`.}

\item{normType}{For Resnik similarity only:
* "unif": By log of max annotation count

* "max": By maximum IC value

* "sum": By maximum pairwise IC

* "none": No normalization}

\item{weights}{Named vector of weights for GOGO/Wang methods. 
Names must match relation types (e.g., "is_a", "part_of"), values < 1.}

\item{useIgraph}{Use igraph-based calculation (faster for large graphs)}

\item{useCache}{Use cached IC values when applicable}

\item{verbose}{Print progress messages}
}
\value{
A symmetric numeric matrix of similarity scores with row/column names
}
\description{
A unified interface for calculating semantic similarity between ontology terms using
various methods. Each method has its own characteristics and is suitable for
different scenarios.
}
\details{
Available methods include:

## Term Overlap Methods (method = "term")

* kappa: Cohen's kappa coefficient

* overlap: Overlap coefficient

* jaccard: Jaccard similarity coefficient

* dice: Dice coefficient


## Information Content Based Methods

* ic: Universal IC that only depends on the structure

* resnik: Resnik's method with multiple normalization options

* lin: Lin's similarity method

* faith: FaITH similarity for sparse annotations

* rel: Relevance similarity with IC-based correction

* simic: SimIC similarity with improved correction


## Graph-based Methods
* gogo: GOGO method optimized for GO terms

* wang: Wang's method considering relation types

* anc: Simple ancestor-based Jaccard similarity
}
\examples{
\dontrun{
# Basic usage
tree <-  buildGOTree(namespace = "BP", orgDb = "org.Hs.eg.db")
sim <- simterm(tree, c("GO:0008150", "GO:0003674"), method = "ic")

# Term overlap similarity
sim <- simterm(tree, terms, method = "term", submethod = "kappa")

# Resnik with normalization
sim <- simterm(tree, terms, method = "resnik", normType = "max")

# Wang method with custom weights
weights <- c("is_a" = 0.8, "part_of" = 0.6)
sim <- simterm(tree, terms, method = "wang", weights = weights)

# GOGO method with basic calculation
sim <- simterm(tree, terms, method = "gogo", useIgraph = FALSE)
}
}
\seealso{
Individual similarity functions:
* [calculateTermSimilarity()]
* [calculateUniversalSim()]
* [calculateResnikSim()]
* [calculateWangSim()]
}
\author{
Kai Guo
}
