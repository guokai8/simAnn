% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_with.R
\name{simtermW}
\alias{simtermW}
\title{Calculate semantic similarity between terms with optional term restriction and background}
\usage{
simtermW(tree, terms, new_annot, use_background = FALSE, ...)
}
\arguments{
\item{tree}{OntologyTree object}

\item{terms}{Terms to analyze}

\item{new_annot}{Named list of genes per term or data frame with Term/GeneID columns}

\item{use_background}{Whether to use original annotations}

\item{...}{Additional parameters passed to clusterST}

\item{method}{Similarity method to use:

* "term": Term overlap based methods

* "ic": Universal information content

* "resnik": Resnik's information content 
Link: 
\doi{10.1613/jair.514}, \doi{10.1186/1471-2105-9-S5-S4}, \doi{10.1186/1471-2105-11-562}, \doi{10.1155/2013/292063}.

* "lin": Lin similarity
Link: \doi{10.5555/645527.657297}.

* "faith": FaITH similarity
Link: \doi{10.1007/978-3-642-17746-0_39}.

* "rel": Relevance similarity
Link: \doi{10.1186/1471-2105-7-302}.

* "simic": SimIC similarity
Link: \doi{10.48550/arXiv.1001.0958}.

* "gogo": GOGO similarity
Link: \doi{10.1038/s41598-018-33219-y}.

* "wang": Wang's method
Link: \doi{10.1093/bioinformatics/btm087}.

* "anc": Ancestor based similarity}

\item{ic_method}{For "faith","rel",and "simic" methods:
* "universal": Calculate universal-based Information Content
* "annotation": Calculate annotation-based Information Content
* "wang": Wang's Information Content
* "offspring": Calculate offspring-based Information Content}

\item{submethod}{For "term" method only:
* "kappa": Cohen's kappa

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is [the kappa coeffcient](https://en.wikipedia.org/wiki/Cohen%27s_kappa)
of the two sets. 

* "overlap": Overlap coefficient

Denote two sets `A` and `B` as the items annotated to terms `a` and `b`. The similarity value is the overlap coefficient
of the two sets, defined as `length(intersect(A, B))/min(length(A), length(B))`.

* "jaccard": Jaccard similarity

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is the Jaccard coeffcient
of the two sets, defined as `length(intersect(A, B))/length(union(A, B))`.   

* "dice": Dice coefficient

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is the Dice coeffcient
of the two sets, defined as `2*length(intersect(A, B))/(length(A) + length(B))`.}

\item{normType}{For Resnik similarity only:
* "unif": By log of max annotation count

* "max": By maximum IC value

* "sum": By maximum pairwise IC

* "none": No normalization}

\item{weights}{Named vector of weights for GOGO/Wang methods. 
Names must match relation types (e.g., "is_a", "part_of"), values < 1.}

\item{useIgraph}{Use igraph-based calculation (faster for large graphs)}

\item{useCache}{Use cached IC values when applicable}

\item{verbose}{Print progress messages}
}
\value{
Term clusters object
}
\description{
A unified interface for calculating semantic similarity between ontology terms using
various methods. Each method has its own characteristics and is suitable for
different scenarios.
}
\author{
Kai Guo
}
