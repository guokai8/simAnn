% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster.R
\name{clusterST}
\alias{clusterST}
\title{Process similar terms clustering}
\usage{
clusterST(
  tree,
  terms,
  method = c("term", "ic", "resnik", "lin", "faith", "rel", "simic", "gogo", "wang",
    "anc"),
  threshold = 0.8,
  ic_method = NULL,
  submethod = c("kappa", "overlap", "jaccard", "dice"),
  normType = "max",
  weights = NULL,
  annotUniverse = NULL,
  useCache = TRUE,
  useIgraph = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{tree}{An OntologyTree object}

\item{terms}{A character vector of term IDs/names, or numeric indices}

\item{method}{Similarity method to use:

* "term": Term overlap based methods

* "ic": Universal information content

* "resnik": Resnik's information content 
Link: 
\doi{10.1613/jair.514}, \doi{10.1186/1471-2105-9-S5-S4}, \doi{10.1186/1471-2105-11-562}, \doi{10.1155/2013/292063}.

* "lin": Lin similarity
Link: \doi{10.5555/645527.657297}.

* "faith": FaITH similarity
Link: \doi{10.1007/978-3-642-17746-0_39}.

* "rel": Relevance similarity
Link: \doi{10.1186/1471-2105-7-302}.

* "simic": SimIC similarity
Link: \doi{10.48550/arXiv.1001.0958}.

* "gogo": GOGO similarity
Link: \doi{10.1038/s41598-018-33219-y}.

* "wang": Wang's method
Link: \doi{10.1093/bioinformatics/btm087}.

* "anc": Ancestor based similarity}

\item{ic_method}{For "faith","rel",and "simic" methods:
* "universal": Calculate universal-based Information Content
* "annotation": Calculate annotation-based Information Content
* "wang": Wang's Information Content
* "offspring": Calculate offspring-based Information Content}

\item{submethod}{For "term" method only:
* "kappa": Cohen's kappa

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is [the kappa coeffcient](https://en.wikipedia.org/wiki/Cohen%27s_kappa)
of the two sets. 

* "overlap": Overlap coefficient

Denote two sets `A` and `B` as the items annotated to terms `a` and `b`. The similarity value is the overlap coefficient
of the two sets, defined as `length(intersect(A, B))/min(length(A), length(B))`.

* "jaccard": Jaccard similarity

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is the Jaccard coeffcient
of the two sets, defined as `length(intersect(A, B))/length(union(A, B))`.   

* "dice": Dice coefficient

Denote two sets `A` and `B` as the items annotated to term `a` and `b`. The similarity value is the Dice coeffcient
of the two sets, defined as `2*length(intersect(A, B))/(length(A) + length(B))`.}

\item{normType}{For Resnik similarity only:
* "unif": By log of max annotation count

* "max": By maximum IC value

* "sum": By maximum pairwise IC

* "none": No normalization}

\item{weights}{Named vector of weights for GOGO/Wang methods. 
Names must match relation types (e.g., "is_a", "part_of"), values < 1.}

\item{useCache}{Use cached IC values when applicable}

\item{useIgraph}{Use igraph-based calculation (faster for large graphs)}

\item{verbose}{Print progress messages
\dontrun{
#Generate clusters
tree <-  buildGOTree(namespace = "BP", orgDb = "org.Hs.eg.db")
clu <- clusterST(tree, 1:30, 
                          method = "wang",
                          weights = weights,
                          threshold = 0.2)
}}
}
\value{
A list containing multiple representations of clustering results
}
\description{
Groups semantically similar terms based on similarity scores and parent-child relationships.
Returns results in multiple formats as a list.
}
\author{
Kai Guo
}
