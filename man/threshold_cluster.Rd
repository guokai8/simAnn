% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/threshold_cluster.R
\name{threshold_cluster}
\alias{threshold_cluster}
\title{Threshold-based Clustering using Graph Community Detection}
\usage{
threshold_cluster(
  sim_mat,
  threshold,
  method = c("components", "louvain", "walktrap"),
  remove_self = TRUE
)
}
\arguments{
\item{sim_mat}{A numeric matrix representing pairwise similarities. Rows and columns should correspond to the same set of objects.}

\item{threshold}{A numeric value between 0 and 1. Pairs with similarity greater than or equal to this threshold are connected.}

\item{method}{A character string specifying the community detection method to use. Options include:
\itemize{
  \item \code{"components"}: Uses connected components (the simplest approach).
  \item \code{"louvain"}: Uses the Louvain algorithm for community detection.
  \item \code{"walktrap"}: Uses the Walktrap algorithm based on random walks.
}
Default is \code{"components"}.}

\item{remove_self}{Logical. If \code{TRUE} (the default), self-loops are removed by setting the diagonal of \code{sim_mat} to zero.}
}
\value{
A vector of cluster memberships for each object.
}
\description{
This function performs clustering on a similarity matrix based on a specified threshold.
The similarity matrix is first binarized (values \eqn{\geq}{>=} the threshold are set to 1),
an undirected graph is constructed from the binary matrix, and then a community detection algorithm is applied.
}
\examples{
\dontrun{
  sim_mat <- matrix(runif(100, 0, 1), nrow = 10)
  diag(sim_mat) <- 1
  clusters <- threshold_cluster(sim_mat, threshold = 0.6, method = "components")
}

}
